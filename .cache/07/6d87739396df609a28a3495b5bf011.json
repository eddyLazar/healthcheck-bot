{"id":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","dependencies":[{"name":"/Users/eddy/src/opensource/telegram-healthcheck-bot/package.json","includedInParent":true,"mtime":1566056126901},{"name":"/Users/eddy/src/opensource/telegram-healthcheck-bot/node_modules/enquire.js/package.json","includedInParent":true,"mtime":1565789523759},{"name":"./MediaQuery","loc":{"line":1,"column":25},"parent":"/Users/eddy/src/opensource/telegram-healthcheck-bot/node_modules/enquire.js/src/MediaQueryDispatch.js","resolved":"/Users/eddy/src/opensource/telegram-healthcheck-bot/node_modules/enquire.js/src/MediaQuery.js"},{"name":"./Util","loc":{"line":2,"column":19},"parent":"/Users/eddy/src/opensource/telegram-healthcheck-bot/node_modules/enquire.js/src/MediaQueryDispatch.js","resolved":"/Users/eddy/src/opensource/telegram-healthcheck-bot/node_modules/enquire.js/src/Util.js"}],"generated":{"js":"var MediaQuery = require('./MediaQuery');\nvar Util = require('./Util');\nvar each = Util.each;\nvar isFunction = Util.isFunction;\nvar isArray = Util.isArray;\n\n/**\n * Allows for registration of query handlers.\n * Manages the query handler's state and is responsible for wiring up browser events\n *\n * @constructor\n */\nfunction MediaQueryDispatch () {\n    if(!window.matchMedia) {\n        throw new Error('matchMedia not present, legacy browsers require a polyfill');\n    }\n\n    this.queries = {};\n    this.browserIsIncapable = !window.matchMedia('only all').matches;\n}\n\nMediaQueryDispatch.prototype = {\n\n    constructor : MediaQueryDispatch,\n\n    /**\n     * Registers a handler for the given media query\n     *\n     * @param {string} q the media query\n     * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers\n     * @param {function} options.match fired when query matched\n     * @param {function} [options.unmatch] fired when a query is no longer matched\n     * @param {function} [options.setup] fired when handler first triggered\n     * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched\n     * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers\n     */\n    register : function(q, options, shouldDegrade) {\n        var queries         = this.queries,\n            isUnconditional = shouldDegrade && this.browserIsIncapable;\n\n        if(!queries[q]) {\n            queries[q] = new MediaQuery(q, isUnconditional);\n        }\n\n        //normalise to object in an array\n        if(isFunction(options)) {\n            options = { match : options };\n        }\n        if(!isArray(options)) {\n            options = [options];\n        }\n        each(options, function(handler) {\n            if (isFunction(handler)) {\n                handler = { match : handler };\n            }\n            queries[q].addHandler(handler);\n        });\n\n        return this;\n    },\n\n    /**\n     * unregisters a query and all it's handlers, or a specific handler for a query\n     *\n     * @param {string} q the media query to target\n     * @param {object || function} [handler] specific handler to unregister\n     */\n    unregister : function(q, handler) {\n        var query = this.queries[q];\n\n        if(query) {\n            if(handler) {\n                query.removeHandler(handler);\n            }\n            else {\n                query.clear();\n                delete this.queries[q];\n            }\n        }\n\n        return this;\n    }\n};\n\nmodule.exports = MediaQueryDispatch;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/enquire.js/src/MediaQueryDispatch.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}}],"sources":{"../../node_modules/enquire.js/src/MediaQueryDispatch.js":"var MediaQuery = require('./MediaQuery');\nvar Util = require('./Util');\nvar each = Util.each;\nvar isFunction = Util.isFunction;\nvar isArray = Util.isArray;\n\n/**\n * Allows for registration of query handlers.\n * Manages the query handler's state and is responsible for wiring up browser events\n *\n * @constructor\n */\nfunction MediaQueryDispatch () {\n    if(!window.matchMedia) {\n        throw new Error('matchMedia not present, legacy browsers require a polyfill');\n    }\n\n    this.queries = {};\n    this.browserIsIncapable = !window.matchMedia('only all').matches;\n}\n\nMediaQueryDispatch.prototype = {\n\n    constructor : MediaQueryDispatch,\n\n    /**\n     * Registers a handler for the given media query\n     *\n     * @param {string} q the media query\n     * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers\n     * @param {function} options.match fired when query matched\n     * @param {function} [options.unmatch] fired when a query is no longer matched\n     * @param {function} [options.setup] fired when handler first triggered\n     * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched\n     * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers\n     */\n    register : function(q, options, shouldDegrade) {\n        var queries         = this.queries,\n            isUnconditional = shouldDegrade && this.browserIsIncapable;\n\n        if(!queries[q]) {\n            queries[q] = new MediaQuery(q, isUnconditional);\n        }\n\n        //normalise to object in an array\n        if(isFunction(options)) {\n            options = { match : options };\n        }\n        if(!isArray(options)) {\n            options = [options];\n        }\n        each(options, function(handler) {\n            if (isFunction(handler)) {\n                handler = { match : handler };\n            }\n            queries[q].addHandler(handler);\n        });\n\n        return this;\n    },\n\n    /**\n     * unregisters a query and all it's handlers, or a specific handler for a query\n     *\n     * @param {string} q the media query to target\n     * @param {object || function} [handler] specific handler to unregister\n     */\n    unregister : function(q, handler) {\n        var query = this.queries[q];\n\n        if(query) {\n            if(handler) {\n                query.removeHandler(handler);\n            }\n            else {\n                query.clear();\n                delete this.queries[q];\n            }\n        }\n\n        return this;\n    }\n};\n\nmodule.exports = MediaQueryDispatch;\n"},"lineCount":86}},"error":null,"hash":"823358f24d9e330ffb0bb6edc4a22344","cacheData":{"env":{}}}